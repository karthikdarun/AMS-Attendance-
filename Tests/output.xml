<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.7.9 on win32)" generated="20210206 18:22:54.272" rpa="false">
<suite id="s1" name="DeleteRecords tc" source="C:\Python Automation\AMS\Tests\TC_9__DeleteRecords_tc.robot">
<test id="s1-t1" name="Connect to the database">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymssql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
</arguments>
<msg timestamp="20210206 18:22:54.546" level="INFO">Connecting using : pymssql.connect(database=DB_9B4693_MCQ, user=DB_9B4693_MCQ_admin, password=P@ssw0rd, host=sql5045.site4now.net, port=1433) </msg>
<status status="PASS" starttime="20210206 18:22:54.541" endtime="20210206 18:22:58.983"></status>
</kw>
<status status="PASS" starttime="20210206 18:22:54.537" endtime="20210206 18:22:58.989" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete the record from InvoiceSupplierAttendance">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 invoiceid from TblInvoiceSupplierAttendance order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblInvoiceSupplierAttendance}</var>
</assign>
<msg timestamp="20210206 18:22:59.095" level="INFO">Executing : Query  |  select top 1 invoiceid from TblInvoiceSupplierAttendance order by CreatedDate desc </msg>
<msg timestamp="20210206 18:23:00.908" level="INFO">${TblInvoiceSupplierAttendance} = [(27,)]</msg>
<status status="PASS" starttime="20210206 18:22:58.995" endtime="20210206 18:23:00.908"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:02.919" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:00.909" endtime="20210206 18:23:02.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblInvoiceSupplierAttendance[0][0]}</arg>
</arguments>
<assign>
<var>${TblInvoiceSupplierAttendance_DBValue}</var>
</assign>
<msg timestamp="20210206 18:23:02.922" level="INFO">${TblInvoiceSupplierAttendance_DBValue} = 27</msg>
<status status="PASS" starttime="20210206 18:23:02.921" endtime="20210206 18:23:02.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblInvoiceSupplierAttendance_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:02.923" endtime="20210206 18:23:02.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:04.943" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:02.927" endtime="20210206 18:23:04.943"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblInvoiceSupplierAttendance where invoiceid = ${TblInvoiceSupplierAttendance_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:23:04.946" level="INFO">Executing : Execute SQL String  |  delete from TblInvoiceSupplierAttendance where invoiceid = 27 </msg>
<status status="PASS" starttime="20210206 18:23:04.945" endtime="20210206 18:23:07.673"></status>
</kw>
<status status="PASS" starttime="20210206 18:22:58.993" endtime="20210206 18:23:07.675" critical="yes"></status>
</test>
<test id="s1-t3" name="Delete the record from Invoiceattendancedetail">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 invoiceid from tblinvoiceattendancedetail order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${tblinvoiceattendancedetail}</var>
</assign>
<msg timestamp="20210206 18:23:07.682" level="INFO">Executing : Query  |  select top 1 invoiceid from tblinvoiceattendancedetail order by CreatedDate desc </msg>
<msg timestamp="20210206 18:23:09.544" level="INFO">${tblinvoiceattendancedetail} = [(27,)]</msg>
<status status="PASS" starttime="20210206 18:23:07.682" endtime="20210206 18:23:09.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:11.562" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:09.549" endtime="20210206 18:23:11.562"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblinvoiceattendancedetail[0][0]}</arg>
</arguments>
<assign>
<var>${tblinvoiceattendancedetail_DBValue}</var>
</assign>
<msg timestamp="20210206 18:23:11.565" level="INFO">${tblinvoiceattendancedetail_DBValue} = 27</msg>
<status status="PASS" starttime="20210206 18:23:11.564" endtime="20210206 18:23:11.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblinvoiceattendancedetail_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:11.566" endtime="20210206 18:23:11.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:13.571" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:11.570" endtime="20210206 18:23:13.571"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblinvoiceattendancedetail where invoiceid = ${tblinvoiceattendancedetail_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:23:13.574" level="INFO">Executing : Execute SQL String  |  delete from tblinvoiceattendancedetail where invoiceid = 27 </msg>
<status status="PASS" starttime="20210206 18:23:13.573" endtime="20210206 18:23:16.312"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:07.679" endtime="20210206 18:23:16.314" critical="yes"></status>
</test>
<test id="s1-t4" name="Delete the record from TblinvoiceMaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 invoiceid from TblinvoiceMaster order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblinvoiceMaster}</var>
</assign>
<msg timestamp="20210206 18:23:16.321" level="INFO">Executing : Query  |  select top 1 invoiceid from TblinvoiceMaster order by CreatedDate desc </msg>
<msg timestamp="20210206 18:23:18.184" level="INFO">${TblinvoiceMaster} = [(27,)]</msg>
<status status="PASS" starttime="20210206 18:23:16.321" endtime="20210206 18:23:18.184"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:20.201" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:18.189" endtime="20210206 18:23:20.201"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblinvoiceMaster[0][0]}</arg>
</arguments>
<assign>
<var>${TblinvoiceMaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:23:20.203" level="INFO">${TblinvoiceMaster_DBValue} = 27</msg>
<status status="PASS" starttime="20210206 18:23:20.202" endtime="20210206 18:23:20.203"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblinvoiceMaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:20.205" endtime="20210206 18:23:20.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:22.222" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:20.208" endtime="20210206 18:23:22.222"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblinvoiceMaster where invoiceid = ${TblinvoiceMaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:23:22.225" level="INFO">Executing : Execute SQL String  |  delete from TblinvoiceMaster where invoiceid = 27 </msg>
<status status="PASS" starttime="20210206 18:23:22.224" endtime="20210206 18:23:24.907"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:16.318" endtime="20210206 18:23:24.910" critical="yes"></status>
</test>
<test id="s1-t5" name="Delete the record from TblQuotationHeader">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 quotationheaderid from TblQuotationHeader order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblQuotationHeader}</var>
</assign>
<msg timestamp="20210206 18:23:24.917" level="INFO">Executing : Query  |  select top 1 quotationheaderid from TblQuotationHeader order by CreatedDate desc </msg>
<msg timestamp="20210206 18:23:26.555" level="INFO">${TblQuotationHeader} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:23:24.916" endtime="20210206 18:23:26.555"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:28.558" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:26.556" endtime="20210206 18:23:28.558"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblQuotationHeader[0][0]}</arg>
</arguments>
<assign>
<var>${Tblquotationheaderid_dbvalue}</var>
</assign>
<msg timestamp="20210206 18:23:28.561" level="INFO">${Tblquotationheaderid_dbvalue} = 30</msg>
<status status="PASS" starttime="20210206 18:23:28.560" endtime="20210206 18:23:28.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Tblquotationheaderid_dbvalue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:28.562" endtime="20210206 18:23:28.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:30.577" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:28.566" endtime="20210206 18:23:30.577"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblQuotationHeader where quotationheaderid = ${Tblquotationheaderid_dbvalue}</arg>
</arguments>
<msg timestamp="20210206 18:23:30.580" level="INFO">Executing : Execute SQL String  |  delete from TblQuotationHeader where quotationheaderid = 30 </msg>
<status status="PASS" starttime="20210206 18:23:30.579" endtime="20210206 18:23:33.284"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:24.913" endtime="20210206 18:23:33.287" critical="yes"></status>
</test>
<test id="s1-t6" name="Delete the record from TblQuotationDetail">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 quotationdetailid from TblQuotationDetail order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblQuotationDetail}</var>
</assign>
<msg timestamp="20210206 18:23:33.294" level="INFO">Executing : Query  |  select top 1 quotationdetailid from TblQuotationDetail order by CreatedDate desc </msg>
<msg timestamp="20210206 18:23:35.147" level="INFO">${TblQuotationDetail} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:23:33.294" endtime="20210206 18:23:35.147"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:37.166" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:35.149" endtime="20210206 18:23:37.166"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblQuotationDetail[0][0]}</arg>
</arguments>
<assign>
<var>${TblQuotationDetail_DBValue}</var>
</assign>
<msg timestamp="20210206 18:23:37.169" level="INFO">${TblQuotationDetail_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:23:37.168" endtime="20210206 18:23:37.169"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblQuotationDetail_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:37.170" endtime="20210206 18:23:37.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:39.185" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:37.173" endtime="20210206 18:23:39.185"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblQuotationDetail where quotationdetailid = ${TblQuotationDetail_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:23:39.188" level="INFO">Executing : Execute SQL String  |  delete from TblQuotationDetail where quotationdetailid = 30 </msg>
<status status="PASS" starttime="20210206 18:23:39.187" endtime="20210206 18:23:42.187"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:33.292" endtime="20210206 18:23:42.190" critical="yes"></status>
</test>
<test id="s1-t7" name="Delete the record from Tblquotationjobdetails">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 quotationheaderid from Tblquotationjobdetails order by QuotationHeaderID desc</arg>
</arguments>
<assign>
<var>${quotationJobheaderid}</var>
</assign>
<msg timestamp="20210206 18:23:42.196" level="INFO">Executing : Query  |  select top 1 quotationheaderid from Tblquotationjobdetails order by QuotationHeaderID desc </msg>
<msg timestamp="20210206 18:23:43.830" level="INFO">${quotationJobheaderid} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:23:42.196" endtime="20210206 18:23:43.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:45.841" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:43.831" endtime="20210206 18:23:45.841"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${quotationJobheaderid[0][0]}</arg>
</arguments>
<assign>
<var>${Tblquotationjobdetails_dbvalue}</var>
</assign>
<msg timestamp="20210206 18:23:45.844" level="INFO">${Tblquotationjobdetails_dbvalue} = 30</msg>
<status status="PASS" starttime="20210206 18:23:45.843" endtime="20210206 18:23:45.844"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Tblquotationjobdetails_dbvalue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:45.845" endtime="20210206 18:23:45.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:47.864" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:45.848" endtime="20210206 18:23:47.864"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from Tblquotationjobdetails where quotationheaderid = ${Tblquotationjobdetails_dbvalue}</arg>
</arguments>
<msg timestamp="20210206 18:23:47.866" level="INFO">Executing : Execute SQL String  |  delete from Tblquotationjobdetails where quotationheaderid = 30 </msg>
<status status="PASS" starttime="20210206 18:23:47.866" endtime="20210206 18:23:50.827"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:42.194" endtime="20210206 18:23:50.829" critical="yes"></status>
</test>
<test id="s1-t8" name="Delete the record from quotationtermsdetails">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 quotationheaderid from Tblquotationtermsdetails order by QuotationHeaderID desc</arg>
</arguments>
<assign>
<var>${quotationTermheaderid}</var>
</assign>
<msg timestamp="20210206 18:23:50.837" level="INFO">Executing : Query  |  select top 1 quotationheaderid from Tblquotationtermsdetails order by QuotationHeaderID desc </msg>
<msg timestamp="20210206 18:23:52.750" level="INFO">${quotationTermheaderid} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:23:50.836" endtime="20210206 18:23:52.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:54.762" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:52.752" endtime="20210206 18:23:54.762"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${quotationTermheaderid[0][0]}</arg>
</arguments>
<assign>
<var>${TblquotationTermdetails_dbvalue}</var>
</assign>
<msg timestamp="20210206 18:23:54.765" level="INFO">${TblquotationTermdetails_dbvalue} = 30</msg>
<status status="PASS" starttime="20210206 18:23:54.764" endtime="20210206 18:23:54.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblquotationTermdetails_dbvalue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:23:54.766" endtime="20210206 18:23:54.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:23:56.772" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:23:54.768" endtime="20210206 18:23:56.772"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from Tblquotationtermsdetails where quotationheaderid = ${TblquotationTermdetails_dbvalue}</arg>
</arguments>
<msg timestamp="20210206 18:23:56.775" level="INFO">Executing : Execute SQL String  |  delete from Tblquotationtermsdetails where quotationheaderid = 30 </msg>
<status status="PASS" starttime="20210206 18:23:56.774" endtime="20210206 18:23:59.785"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:50.834" endtime="20210206 18:23:59.789" critical="yes"></status>
</test>
<test id="s1-t9" name="Delete the record from Tblquotationtemplate">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 templateid from Tblquotationtemplate order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${Tblquotationtemplate}</var>
</assign>
<msg timestamp="20210206 18:23:59.797" level="INFO">Executing : Query  |  select top 1 templateid from Tblquotationtemplate order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:01.702" level="INFO">${Tblquotationtemplate} = [(34,)]</msg>
<status status="PASS" starttime="20210206 18:23:59.797" endtime="20210206 18:24:01.702"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:03.712" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:01.709" endtime="20210206 18:24:03.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${Tblquotationtemplate[0][0]}</arg>
</arguments>
<assign>
<var>${Tblquotationtemplate_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:03.715" level="INFO">${Tblquotationtemplate_DBValue} = 34</msg>
<status status="PASS" starttime="20210206 18:24:03.714" endtime="20210206 18:24:03.715"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Tblquotationtemplate_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:03.716" endtime="20210206 18:24:03.718"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:05.735" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:03.720" endtime="20210206 18:24:05.735"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from Tblquotationtemplate where templateid = ${Tblquotationtemplate_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:05.738" level="INFO">Executing : Execute SQL String  |  delete from Tblquotationtemplate where templateid = 34 </msg>
<status status="PASS" starttime="20210206 18:24:05.737" endtime="20210206 18:24:09.707"></status>
</kw>
<status status="PASS" starttime="20210206 18:23:59.794" endtime="20210206 18:24:09.709" critical="yes"></status>
</test>
<test id="s1-t10" name="Delete the record from TblBusinessHoursMaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 BusinessCompanyID from TblBusinessHoursMaster order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblBusinessHoursMaster}</var>
</assign>
<msg timestamp="20210206 18:24:09.716" level="INFO">Executing : Query  |  select top 1 BusinessCompanyID from TblBusinessHoursMaster order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:12.267" level="INFO">${TblBusinessHoursMaster} = [(28,)]</msg>
<status status="PASS" starttime="20210206 18:24:09.716" endtime="20210206 18:24:12.267"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:14.272" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:12.270" endtime="20210206 18:24:14.272"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblBusinessHoursMaster[0][0]}</arg>
</arguments>
<assign>
<var>${TblBusinessHoursMaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:14.275" level="INFO">${TblBusinessHoursMaster_DBValue} = 28</msg>
<status status="PASS" starttime="20210206 18:24:14.274" endtime="20210206 18:24:14.275"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblBusinessHoursMaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:14.276" endtime="20210206 18:24:14.278"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:16.287" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:14.279" endtime="20210206 18:24:16.287"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblBusinessHoursMaster where BusinessCompanyID = ${TblBusinessHoursMaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:16.290" level="INFO">Executing : Execute SQL String  |  delete from TblBusinessHoursMaster where BusinessCompanyID = 28 </msg>
<status status="PASS" starttime="20210206 18:24:16.288" endtime="20210206 18:24:19.418"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:09.714" endtime="20210206 18:24:19.419" critical="yes"></status>
</test>
<test id="s1-t11" name="Delete the record from Tblcompanysite">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 companyid from Tblcompanysite order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${Tblcompanysite}</var>
</assign>
<msg timestamp="20210206 18:24:19.427" level="INFO">Executing : Query  |  select top 1 companyid from Tblcompanysite order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:21.227" level="INFO">${Tblcompanysite} = [(28,)]</msg>
<status status="PASS" starttime="20210206 18:24:19.427" endtime="20210206 18:24:21.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:23.231" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:21.229" endtime="20210206 18:24:23.231"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${Tblcompanysite[0][0]}</arg>
</arguments>
<assign>
<var>${Tblcompanysite_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:23.234" level="INFO">${Tblcompanysite_DBValue} = 28</msg>
<status status="PASS" starttime="20210206 18:24:23.233" endtime="20210206 18:24:23.234"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Tblcompanysite_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:23.235" endtime="20210206 18:24:23.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:25.249" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:23.239" endtime="20210206 18:24:25.249"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from Tblcompanysite where companyid = ${Tblcompanysite_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:25.252" level="INFO">Executing : Execute SQL String  |  delete from Tblcompanysite where companyid = 28 </msg>
<status status="PASS" starttime="20210206 18:24:25.251" endtime="20210206 18:24:29.221"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:19.425" endtime="20210206 18:24:29.228" critical="yes"></status>
</test>
<test id="s1-t12" name="Delete the record from tblcompanyproject">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 companyid from tblcompanyproject order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${tblcompanyproject}</var>
</assign>
<msg timestamp="20210206 18:24:29.236" level="INFO">Executing : Query  |  select top 1 companyid from tblcompanyproject order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:31.144" level="INFO">${tblcompanyproject} = [(28,)]</msg>
<status status="PASS" starttime="20210206 18:24:29.235" endtime="20210206 18:24:31.144"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:33.162" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:31.148" endtime="20210206 18:24:33.162"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblcompanyproject[0][0]}</arg>
</arguments>
<assign>
<var>${tblcompanyproject_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:33.165" level="INFO">${tblcompanyproject_DBValue} = 28</msg>
<status status="PASS" starttime="20210206 18:24:33.163" endtime="20210206 18:24:33.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblcompanyproject_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:33.166" endtime="20210206 18:24:33.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:35.180" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:33.169" endtime="20210206 18:24:35.180"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblcompanyproject where companyid = ${tblcompanyproject_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:35.183" level="INFO">Executing : Execute SQL String  |  delete from tblcompanyproject where companyid = 28 </msg>
<status status="PASS" starttime="20210206 18:24:35.182" endtime="20210206 18:24:39.147"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:29.233" endtime="20210206 18:24:39.151" critical="yes"></status>
</test>
<test id="s1-t13" name="Delete the record from TblCompanyMaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 companyid from TblCompanyMaster order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblCompanyMaster}</var>
</assign>
<msg timestamp="20210206 18:24:39.158" level="INFO">Executing : Query  |  select top 1 companyid from TblCompanyMaster order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:40.871" level="INFO">${TblCompanyMaster} = [(28,)]</msg>
<status status="PASS" starttime="20210206 18:24:39.157" endtime="20210206 18:24:40.871"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:42.883" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:40.876" endtime="20210206 18:24:42.883"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblCompanyMaster[0][0]}</arg>
</arguments>
<assign>
<var>${TblCompanyMaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:42.886" level="INFO">${TblCompanyMaster_DBValue} = 28</msg>
<status status="PASS" starttime="20210206 18:24:42.885" endtime="20210206 18:24:42.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblCompanyMaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:42.887" endtime="20210206 18:24:42.889"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:44.894" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:42.891" endtime="20210206 18:24:44.894"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblCompanyMaster where companyid = ${TblCompanyMaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:44.897" level="INFO">Executing : Execute SQL String  |  delete from TblCompanyMaster where companyid = 28 </msg>
<status status="PASS" starttime="20210206 18:24:44.896" endtime="20210206 18:24:47.787"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:39.155" endtime="20210206 18:24:47.789" critical="yes"></status>
</test>
<test id="s1-t14" name="Delete the record from tblEmployeesalary">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>Select top 1 EmployeeID from tblEmployeesalary order by Employeeid desc</arg>
</arguments>
<assign>
<var>${tblEmployeesalary}</var>
</assign>
<msg timestamp="20210206 18:24:47.796" level="INFO">Executing : Query  |  Select top 1 EmployeeID from tblEmployeesalary order by Employeeid desc </msg>
<msg timestamp="20210206 18:24:49.386" level="INFO">${tblEmployeesalary} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:24:47.796" endtime="20210206 18:24:49.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:51.391" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:49.389" endtime="20210206 18:24:51.391"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblEmployeesalary[0][0]}</arg>
</arguments>
<assign>
<var>${tblEmployeesalary_DBValue}</var>
</assign>
<msg timestamp="20210206 18:24:51.394" level="INFO">${tblEmployeesalary_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:24:51.392" endtime="20210206 18:24:51.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblEmployeesalary_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:24:51.394" endtime="20210206 18:24:51.396"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:24:53.402" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:51.397" endtime="20210206 18:24:53.402"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblEmployeesalary where EmployeeID = ${tblEmployeesalary_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:24:53.405" level="INFO">Executing : Execute SQL String  |  delete from tblEmployeesalary where EmployeeID = 30 </msg>
<status status="PASS" starttime="20210206 18:24:53.404" endtime="20210206 18:24:56.426"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:47.794" endtime="20210206 18:24:56.428" critical="yes"></status>
</test>
<test id="s1-t15" name="Delete the record from TblPassportDetail">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 EmployeeID from TblPassportDetail order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblPassportDetail}</var>
</assign>
<msg timestamp="20210206 18:24:56.434" level="INFO">Executing : Query  |  select top 1 EmployeeID from TblPassportDetail order by CreatedDate desc </msg>
<msg timestamp="20210206 18:24:58.027" level="INFO">${TblPassportDetail} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:24:56.434" endtime="20210206 18:24:58.027"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:00.041" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:24:58.029" endtime="20210206 18:25:00.041"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblPassportDetail[0][0]}</arg>
</arguments>
<assign>
<var>${TblPassportDetail_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:00.044" level="INFO">${TblPassportDetail_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:25:00.043" endtime="20210206 18:25:00.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblPassportDetail_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:00.046" endtime="20210206 18:25:00.047"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:02.055" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:00.049" endtime="20210206 18:25:02.055"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblPassportDetail where EmployeeID = ${TblPassportDetail_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:02.058" level="INFO">Executing : Execute SQL String  |  delete from TblPassportDetail where EmployeeID = 30 </msg>
<status status="PASS" starttime="20210206 18:25:02.057" endtime="20210206 18:25:05.067"></status>
</kw>
<status status="PASS" starttime="20210206 18:24:56.433" endtime="20210206 18:25:05.069" critical="yes"></status>
</test>
<test id="s1-t16" name="Delete the record from tblworkpassdetails">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 EmployeeID from tblworkpassdetails order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${tblworkpassdetails}</var>
</assign>
<msg timestamp="20210206 18:25:05.076" level="INFO">Executing : Query  |  select top 1 EmployeeID from tblworkpassdetails order by CreatedDate desc </msg>
<msg timestamp="20210206 18:25:06.987" level="INFO">${tblworkpassdetails} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:25:05.076" endtime="20210206 18:25:06.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:08.990" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:06.989" endtime="20210206 18:25:08.990"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblworkpassdetails[0][0]}</arg>
</arguments>
<assign>
<var>${tblworkpassdetails_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:08.993" level="INFO">${tblworkpassdetails_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:25:08.991" endtime="20210206 18:25:08.993"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblworkpassdetails_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:08.994" endtime="20210206 18:25:08.996"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:11.006" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:08.998" endtime="20210206 18:25:11.006"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblworkpassdetails where EmployeeID = ${tblworkpassdetails_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:11.009" level="INFO">Executing : Execute SQL String  |  delete from tblworkpassdetails where EmployeeID = 30 </msg>
<status status="PASS" starttime="20210206 18:25:11.008" endtime="20210206 18:25:13.752"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:05.074" endtime="20210206 18:25:13.754" critical="yes"></status>
</test>
<test id="s1-t17" name="Delete the record from tblcoursedetail">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 EmployeeID from tblcoursedetail order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${tblcoursedetail}</var>
</assign>
<msg timestamp="20210206 18:25:13.761" level="INFO">Executing : Query  |  select top 1 EmployeeID from tblcoursedetail order by CreatedDate desc </msg>
<msg timestamp="20210206 18:25:15.306" level="INFO">${tblcoursedetail} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:25:13.761" endtime="20210206 18:25:15.306"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:17.321" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:15.309" endtime="20210206 18:25:17.321"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblcoursedetail[0][0]}</arg>
</arguments>
<assign>
<var>${tblcoursedetail_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:17.324" level="INFO">${tblcoursedetail_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:25:17.322" endtime="20210206 18:25:17.324"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblcoursedetail_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:17.324" endtime="20210206 18:25:17.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:19.329" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:17.328" endtime="20210206 18:25:19.329"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblcoursedetail where EmployeeID = ${tblcoursedetail_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:19.332" level="INFO">Executing : Execute SQL String  |  delete from tblcoursedetail where EmployeeID = 30 </msg>
<status status="PASS" starttime="20210206 18:25:19.331" endtime="20210206 18:25:22.020"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:13.759" endtime="20210206 18:25:22.029" critical="yes"></status>
</test>
<test id="s1-t18" name="Delete the record from tblemployeemaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 employeeid from tblemployeemaster order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${tblemployeemaster}</var>
</assign>
<msg timestamp="20210206 18:25:22.035" level="INFO">Executing : Query  |  select top 1 employeeid from tblemployeemaster order by CreatedDate desc </msg>
<msg timestamp="20210206 18:25:23.622" level="INFO">${tblemployeemaster} = [(30,)]</msg>
<status status="PASS" starttime="20210206 18:25:22.035" endtime="20210206 18:25:23.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:25.637" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:23.628" endtime="20210206 18:25:25.637"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${tblemployeemaster[0][0]}</arg>
</arguments>
<assign>
<var>${tblemployeemaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:25.640" level="INFO">${tblemployeemaster_DBValue} = 30</msg>
<status status="PASS" starttime="20210206 18:25:25.639" endtime="20210206 18:25:25.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${tblemployeemaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:25.642" endtime="20210206 18:25:25.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:27.659" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:25.644" endtime="20210206 18:25:27.659"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from tblemployeemaster where EmployeeID = ${tblemployeemaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:27.662" level="INFO">Executing : Execute SQL String  |  delete from tblemployeemaster where EmployeeID = 30 </msg>
<status status="PASS" starttime="20210206 18:25:27.660" endtime="20210206 18:25:30.664"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:22.033" endtime="20210206 18:25:30.669" critical="yes"></status>
</test>
<test id="s1-t19" name="Delete the record from TblExpensesDetails">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 ExpensesID from TblExpensesDetails order by CreatedDate desc</arg>
</arguments>
<assign>
<var>${TblExpensesDetails}</var>
</assign>
<msg timestamp="20210206 18:25:30.677" level="INFO">Executing : Query  |  select top 1 ExpensesID from TblExpensesDetails order by CreatedDate desc </msg>
<msg timestamp="20210206 18:25:32.587" level="INFO">${TblExpensesDetails} = [(46,)]</msg>
<status status="PASS" starttime="20210206 18:25:30.675" endtime="20210206 18:25:32.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:34.601" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:32.589" endtime="20210206 18:25:34.601"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblExpensesDetails[0][0]}</arg>
</arguments>
<assign>
<var>${TblExpensesDetails_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:34.604" level="INFO">${TblExpensesDetails_DBValue} = 46</msg>
<status status="PASS" starttime="20210206 18:25:34.603" endtime="20210206 18:25:34.604"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblExpensesDetails_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:34.605" endtime="20210206 18:25:34.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:36.609" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:34.608" endtime="20210206 18:25:36.609"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblExpensesDetails where ExpensesID = ${TblExpensesDetails_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:36.612" level="INFO">Executing : Execute SQL String  |  delete from TblExpensesDetails where ExpensesID = 46 </msg>
<status status="PASS" starttime="20210206 18:25:36.611" endtime="20210206 18:25:39.308"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:30.673" endtime="20210206 18:25:39.310" critical="yes"></status>
</test>
<test id="s1-t20" name="Delete the record from TblUserMaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 userid from tblusermaster order by createddate desc</arg>
</arguments>
<assign>
<var>${TblUserMaster}</var>
</assign>
<msg timestamp="20210206 18:25:39.317" level="INFO">Executing : Query  |  select top 1 userid from tblusermaster order by createddate desc </msg>
<msg timestamp="20210206 18:25:41.227" level="INFO">${TblUserMaster} = [(87,)]</msg>
<status status="PASS" starttime="20210206 18:25:39.317" endtime="20210206 18:25:41.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:43.236" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:41.228" endtime="20210206 18:25:43.236"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblUserMaster[0][0]}</arg>
</arguments>
<assign>
<var>${TblUserMaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:43.238" level="INFO">${TblUserMaster_DBValue} = 87</msg>
<status status="PASS" starttime="20210206 18:25:43.237" endtime="20210206 18:25:43.238"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblUserMaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:43.240" endtime="20210206 18:25:43.241"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:45.252" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:43.243" endtime="20210206 18:25:45.252"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblUserMaster where userid = ${TblUserMaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:45.255" level="INFO">Executing : Execute SQL String  |  delete from TblUserMaster where userid = 87 </msg>
<status status="PASS" starttime="20210206 18:25:45.254" endtime="20210206 18:25:47.942"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:39.314" endtime="20210206 18:25:47.949" critical="yes"></status>
</test>
<test id="s1-t21" name="Delete the record from TblRoleMaster">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>select top 1 roleid from tblrolemaster order by createddate desc</arg>
</arguments>
<assign>
<var>${TblRoleMaster}</var>
</assign>
<msg timestamp="20210206 18:25:47.957" level="INFO">Executing : Query  |  select top 1 roleid from tblrolemaster order by createddate desc </msg>
<msg timestamp="20210206 18:25:49.582" level="INFO">${TblRoleMaster} = [('SXXTWM20DOMR',)]</msg>
<status status="PASS" starttime="20210206 18:25:47.955" endtime="20210206 18:25:49.582"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:51.588" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:49.584" endtime="20210206 18:25:51.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${TblRoleMaster[0][0]}</arg>
</arguments>
<assign>
<var>${TblRoleMaster_SetValue}</var>
</assign>
<msg timestamp="20210206 18:25:51.590" level="INFO">${TblRoleMaster_SetValue} = SXXTWM20DOMR</msg>
<status status="PASS" starttime="20210206 18:25:51.590" endtime="20210206 18:25:51.590"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>'${TblRoleMaster_SetValue}'</arg>
</arguments>
<assign>
<var>${TblRoleMaster_DBValue}</var>
</assign>
<msg timestamp="20210206 18:25:51.593" level="INFO">${TblRoleMaster_DBValue} = 'SXXTWM20DOMR'</msg>
<status status="PASS" starttime="20210206 18:25:51.592" endtime="20210206 18:25:51.593"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${TblRoleMaster_DBValue}</arg>
</arguments>
<status status="PASS" starttime="20210206 18:25:51.594" endtime="20210206 18:25:51.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${minWait}</arg>
</arguments>
<msg timestamp="20210206 18:25:53.614" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210206 18:25:51.598" endtime="20210206 18:25:53.614"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>delete from TblRoleMaster where RoleID = ${TblRoleMaster_DBValue}</arg>
</arguments>
<msg timestamp="20210206 18:25:53.617" level="INFO">Executing : Execute SQL String  |  delete from TblRoleMaster where RoleID = 'SXXTWM20DOMR' </msg>
<status status="PASS" starttime="20210206 18:25:53.616" endtime="20210206 18:25:56.626"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:47.953" endtime="20210206 18:25:56.629" critical="yes"></status>
</test>
<test id="s1-t22" name="Disconnect the database">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20210206 18:25:56.635" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20210206 18:25:56.635" endtime="20210206 18:25:56.636"></status>
</kw>
<status status="PASS" starttime="20210206 18:25:56.633" endtime="20210206 18:25:56.640" critical="yes"></status>
</test>
<status status="PASS" starttime="20210206 18:22:54.281" endtime="20210206 18:25:56.646"></status>
</suite>
<statistics>
<total>
<stat pass="22" fail="0">Critical Tests</stat>
<stat pass="22" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="22" fail="0" id="s1" name="DeleteRecords tc">DeleteRecords tc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
